#!/usr/bin/env bash

# https://github.com/rocker-org/rocker/wiki/Using-the-RStudio-image
#
# docker run -p 8787:8787 rocker/ropensci
#
# make sure the following file exist in the rstudio user's home directory
#
#   .bashrc
#   .profile
#
# They can be copied from the root user:
#
#   rstudio-server shell -u root
#   cp ~/.bashrc ~/.profile .
#   chown rstudio:rstudio .bashrc .profile
#

set -e

function print_help() {
        cat << EOF
USAGE: $( basename $0 ) <command> [args ...]

load        launch a web browser, pointed at the RStudio Server
remove      remove the Docker container hosting the RStudio Server
restart     restart the Docker container hosting the RStudio Server
shell       enter into the Docker container hosting the RStudio Server
start       start the Docker container hosting the RStudio Server
stop        stop the Docker container hosting the RStudio Server
update      update the Docker image, with "docker pull", use to host the RStudio Server

EOF
    exit $?
}

container_user="rstudio"
#container_user_id=`id -u`
#container_user_group=`id -g`
container_user_id=1001
container_user_group=1001
container_name="rstudio-server"
#image_name="rocker/ropensci"
#image_name="rocker/rstudio"
#image_name="rocker/rstudio-daily"
#image_name="rocker/tidyverse"
image_name="rocker/rstudio:testing"

# set the directory where local packages should be installed
# may also need to change the location in .Rprofile
local_packages_dir="/home/rstudio/packages"

# set the local directory where anaconda is installed
anaconda_path="/opt/anaconda3/5.0.1"


container_exists=$(( $(docker container ls -a --filter "name=${container_name}" | wc -l) == 2 ))

case $1 in

    help)
        print_help;
    ;;

    load)
        ch http://localhost:8787 &
    ;;

    remove)
        if (( ${container_exists} )) ; then
            docker rm ${container_name}
        fi
    ;;

    restart)
        $0 stop
        sleep 1
        $0 start
    ;;

    shell)
        # pass all arguments after the first as arguments to `docker exec`
        docker exec -ti -u ${container_user} ${@:2} ${container_name} bash
    ;;

    start)

        if (( ${container_exists} )) ; then
            echo "starting stopped container"
            docker start ${container_name}
        else
            #    -e PKG_CONFIG_PATH=/usr/lib/x86_64-linux-gnu/pkgconfig \

            echo "starting new container"
            docker run \
                -d \
                --volume=/home/zx/playground/R:/home/rstudio \
                --volume=/home/zx/projects:/home/rstudio/repos \
                --volume=${anaconda_path}:/opt/anaconda \
                --name=${container_name} \
                --workdir=/home/rstudio \
                -p 8787:8787 \
                -e USERID=${container_user_id} \
                -e GROUPID=${container_user_group} \
                -e UMASK=022 \
                -e ROOT=TRUE \
                -e R_LIBS_USER=${local_packages_dir} \
                -e ANACONDA_PATH=/opt/anaconda/bin \
                -e PASSWORD=password \
                ${image_name} \
                bash -c 'PATH=/opt/anaconda/bin:${PATH}; /init'
        fi
    ;;

    stop)
        if (( ${container_exists} )) ; then
            echo "stopping container"
            docker stop ${container_name}
        fi
    ;;

    update)
        docker pull ${image_name}
    ;;

esac

exit 0
